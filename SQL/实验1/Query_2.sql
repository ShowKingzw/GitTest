/* 1．使用查询语句完成以下任务（每一个查询都要给出SQL语句，并且列出查询结果）。*/
/*（1）查询与“张志国”同一班级的学生信息（使用连接查询和子查询方式）。*/

-- 连接查询
SELECT 学生表1.学号, 学生表1.姓名, 学生表1.性别, 学生表1.专业班级, 学生表1.出生日期, 学生表1.联系电话
FROM 学生表 AS 学生表1
    INNER JOIN 学生表 AS 学生表2 ON 学生表1.专业班级 = 学生表2.专业班级
WHERE 学生表2.姓名 ='张志国' AND 学生表1.姓名 <> '张志国';
--张志国除外的其他同班同学 

-- 子查询
SELECT *
FROM 学生表
WHERE 专业班级 IN (
    SELECT 专业班级
    FROM 学生表
    WHERE 姓名='张志国' 
)
    AND 姓名 <> '张志国';--张志国除外的其他同班同学 


/*（2）查询比“计算机应用基础”学时多的课程信息（使用连接查询和子查询方式）。*/

-- 连接查询
SELECT 课程表1.课程号, 课程表1.课程名, 课程表1.学分数, 课程表1.学时数, 课程表1.任课教师
FROM 课程表 AS 课程表1
    INNER JOIN 课程表 AS 课程表2 ON 课程表1.学时数 > 课程表2.学时数
WHERE 课程表2.课程名='计算机应用基础';

-- 子查询
SELECT *
FROM 课程表
WHERE 学时数 > (
    SELECT 学时数
FROM 课程表
WHERE 课程名='计算机应用基础'
);


/*（3）查询选修课程号为K002的学生的学号、姓名（使用连接查询、普通子查询、相关子查询、使用exists关键字的相关子查询）。*/

-- 连接查询
SELECT 学生表.学号, 学生表.姓名
FROM 学生表
    INNER JOIN 学生作业表 ON 学生表.学号=学生作业表.学号
WHERE 学生作业表.课程号 ='K002';

-- 普通子查询
SELECT 学号, 姓名
FROM 学生表
WHERE 学号 IN (
    SELECT 学号
FROM 学生作业表
WHERE 课程号='K002'
);

-- 相关子查询
SELECT 学号, 姓名
FROM 学生表
WHERE 学号 IN (
    SELECT 学号
FROM 学生作业表
WHERE 学生作业表.学号 = 学生表.学号 AND 课程号='K002'
);
-- 内层查询可以不与外层的学生表中的参量进行连接。

-- 使用exists关键字的相关子查询
SELECT 学号, 姓名
FROM 学生表
WHERE EXISTS (
    SELECT 1
FROM 学生作业表
WHERE 学生作业表.学号=学生表.学号 AND 课程号= 'K002'
);


/*（4）查询没有选修K001和M001课程的学号、课程号和三次成绩（使用子查询）。*/
SELECT 学生表.学号, 学生作业表.课程号, 学生作业表.作业1成绩, 学生作业表.作业2成绩, 学生作业表.作业3成绩
FROM 学生表
    INNER JOIN 学生作业表 ON 学生表.学号 = 学生作业表.学号
WHERE 学生表.学号 NOT IN (
    SELECT 学生作业表.学号
FROM 学生作业表
WHERE 学生作业表.课程号 IN ('K001', 'M001')
);



/*2．使用数据操纵完成以下任务（每一个任务都要给出SQL语句，并且列出查询结果）。*/
/*（1）在学生表中添加一条学生记录，其中，学号为0593，姓名为张乐，性别为男，专业班级为电子05。*/
-- 删去出生日期的NOT NULL约束，允许NULL，再插入数据
ALTER TABLE 学生表 ALTER COLUMN 出生日期 DATE NULL;
INSERT INTO 学生表
VALUES('0593', '张乐', '男', '电子05', NULL, NULL);
SELECT *
FROM 学生表;



/*（2）将所有课程的学分数变为原来的两倍。*/
UPDATE 课程表
SET 学分数 = 学分数*2;
SELECT *
FROM 课程表;



/*（3）删除张乐的信息。*/
DELETE FROM 学生表
WHERE 姓名='张乐';
SELECT * FROM 学生表;