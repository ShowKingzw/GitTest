# 第二章


# 0b或0B代表二进制
# 0o或0O代表八进制
# 0x或0X代表十六进制
# 会输出相应的十进制
# print(0b111)#对应十进制是7

# /是浮点除，//是整数除
# 取余%  9%4...1
# **幂

# 浮点数，科学计数法，1.2*10**3可表示为1.2e3
# e代表10，后面一点是整数

# divmod()同时计算商和余数
# print(divmod(9, 4))  # 计算9/4n...(2,1)

# float()可转换为浮点数与int()相同
# 浮点数与整数运算时，最终为浮点数

# 复数complex()中虚部用j表示，与数学中i类似
# 支持复数运算，运算逻辑与数学相同
# real方法取实部，imag方法取虚部，complex()函数创建一个值为real+imag*j的复数
# a = 5+3j
# print(a.real)
# print(a.imag)
# print(complex(6, 15))  # 创建复数6+15j

# 转义符
# \n是换行 \r是回车 ............

# type()是内置函数，查询对象类型

# 布尔值bool...True False
# 关系运算符
# ==  !=不等于.....

# 字符串和数字不能进行比较，字符串在进行比较时是根据ASCII码值进行比较的
# 逻辑运算符 and or not
# 空值None，不是0

# 列表list
# 这是一个列表，元素类别不限，逗号隔开，在引号中，元素从左到右序号0开始，-1则是右往左第一个
# test_list = ['33', '66', "55", "ss", "ad", "rg"]
# test_list[1]  # 是'66'

# 列表运算表达式
# 一个完整的切片表达式[start_index:end_index:step]
# ..................[起点元素序号:结束元素序号:步长]...步长表示间隔数，间隔多少就隔多少检索一个
# start_index：该值省略时，表示从起点或终点开始检索，由step参数正负决定从起点还是从终点开始
# end——index：该值省略时表示一直到起点或终点结束，由step参数正负决定在起点还是终点结束
# step：正负数均可，正负代表方向，数值代表步长大小，省略时默认为1，即从左往右取值1

# 内置函数
# int()..例如int("35",8)表示将8进制的35转换成十进制的数，无参数时，结果为0，参数前后可以有空格，中间不能有
# ord()..返回unicode字符对应的整数
# chr()..返回整数所对应的Unicode字符
# list()..不传入参数，创建一个空列表，list("abcd")传入参数后，使用新元素创建新列表，['a','b','c','d']


# a=2 a*=3 ..输出值为6，表示为乘...

# if 语句
# if 逻辑语句:
# 语句块
# else 逻辑语句:
# 语句块

# for语句
# for 变量 in 列表:
#    遍历....
# range()...返回特定区间的自然数序列
# range(start,stop,step),
# start 默认从0开始，
# stop 计数到stop结束，但不包括stop
# step 步长 默认为1

# 列表推导式...产生一个新的列表
# [表达式 for 迭代变量 in 可迭代对象 [if表达式]]    [if]表达式可以不用
# 列表推导式的if条件和条件表达式可以同时使用

# format()是格式化函数
# 单个数值时不写0，多个时从0开始
# "{0:>30}".format(s)  格式化s...最小宽度30...>表示右对齐
# "{0:^30}".format(s)  最小宽度30 ^表示居中
# format(number,"2f")...仅限一个格式化输出时使用，2f表示保留两位小数
